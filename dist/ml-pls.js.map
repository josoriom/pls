{"version":3,"file":"ml-pls.js","sources":["../node_modules/is-any-array/src/index.js","../node_modules/ml-matrix/node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-matrix/node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-matrix/node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/ml-matrix/src/dc/nipals.js","../src/utils.js","../src/pls.js","../src/kopls.js","../../../../.nvm/versions/node/v12.5.0/lib/node_modules/ml-confusion-matrix/src/index.js","../../cross-validation/src/getFolds.js","../src/oplsNIPALS.js","../src/tss.js","../src/OPLS.js","../src/summaryMetadata.js"],"sourcesContent":["'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import max from 'ml-array-max';\nimport min from 'ml-array-min';\nimport isArray from 'is-any-array';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function inspectMatrix() {\n  const indent = ' '.repeat(2);\n  const indentData = ' '.repeat(4);\n  return `${this.constructor.name} {\n${indent}[\n${indentData}${inspectData(this, indentData)}\n${indent}]\n${indent}rows: ${this.rows}\n${indent}columns: ${this.columns}\n}`;\n}\n\nconst maxRows = 15;\nconst maxColumns = 10;\nconst maxNumSize = 8;\n\nfunction inspectData(matrix, indent) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j)));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indent}`);\n}\n\nfunction formatNumber(num) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.substring(eIndex);\n  return exponential.substring(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import rescale from 'ml-array-rescale';\n\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport { inspectMatrix } from './inspect';\nimport { installMathOperations } from './mathOperations';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import WrapperMatrix2D from '../wrap/WrapperMatrix2D';\nimport Matrix from '../matrix';\n\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (Array.isArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (!Y.isColumnVector() || Y.rows !== X.rows) {\n        throw new Error('Y must be a column vector of length X.rows');\n      }\n      u = Y;\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose()\n        .mmul(u)\n        .div(\n          u\n            .transpose()\n            .mmul(u)\n            .get(0, 0),\n        );\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(\n        w\n          .transpose()\n          .mmul(w)\n          .get(0, 0),\n      );\n\n      if (counter > 0) {\n        diff = t\n          .clone()\n          .sub(tOld)\n          .pow(2)\n          .sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose()\n          .mmul(t)\n          .div(\n            t\n              .transpose()\n              .mmul(t)\n              .get(0, 0),\n          );\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(\n          q\n            .transpose()\n            .mmul(q)\n            .get(0, 0),\n        );\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose()\n        .mmul(t)\n        .div(\n          t\n            .transpose()\n            .mmul(t)\n            .get(0, 0),\n        );\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u\n        .transpose()\n        .mmul(t)\n        .div(\n          t\n            .transpose()\n            .mmul(t)\n            .get(0, 0),\n        );\n      let yResidual = Y.clone().sub(\n        t\n          .clone()\n          .mulS(residual.get(0, 0))\n          .mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t\n        .transpose()\n        .mmul(t)\n        .sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n","import Matrix from 'ml-matrix';\n\n/**\n * @private\n * Function that given vector, returns its norm\n * @param {Vector} X\n * @return {number} Norm of the vector\n */\nexport function norm(X) {\n  return Math.sqrt(\n    X.clone()\n      .apply(pow2array)\n      .sum(),\n  );\n}\n\n/**\n * @private\n * Function that pow 2 each element of a Matrix or a Vector,\n * used in the apply method of the Matrix object\n * @param {number} i - index i.\n * @param {number} j - index j.\n * @return {Matrix} The Matrix object modified at the index i, j.\n * */\nexport function pow2array(i, j) {\n  this.set(i, j, this.get(i, j) ** 2);\n}\n\n/**\n * @private\n * Function that normalize the dataset and return the means and\n * standard deviation of each feature.\n * @param {Matrix} dataset\n * @return {object} dataset normalized, means and standard deviations\n */\nexport function featureNormalize(dataset) {\n  let means = dataset.mean('column');\n  let std = dataset.standardDeviation('column', {\n    mean: means,\n    unbiased: true,\n  });\n  let result = Matrix.checkMatrix(dataset).subRowVector(means);\n  return { result: result.divRowVector(std), means: means, std: std };\n}\n\n/**\n * @private\n * Function that initialize an array of matrices.\n * @param {Array} array\n * @param {boolean} isMatrix\n * @return {Array} array with the matrices initialized.\n */\nexport function initializeMatrices(array, isMatrix) {\n  if (isMatrix) {\n    for (let i = 0; i < array.length; ++i) {\n      for (let j = 0; j < array[i].length; ++j) {\n        let elem = array[i][j];\n        array[i][j] = elem !== null ? new Matrix(array[i][j]) : undefined;\n      }\n    }\n  } else {\n    for (let i = 0; i < array.length; ++i) {\n      array[i] = new Matrix(array[i]);\n    }\n  }\n\n  return array;\n}\n","import Matrix from 'ml-matrix';\n\nimport * as Utils from './utils';\n\n/**\n * @class PLS\n */\nexport class PLS {\n  /**\n   * Constructor for Partial Least Squares (PLS)\n   * @param {object} options\n   * @param {number} [options.latentVectors] - Number of latent vector to get (if the algorithm doesn't find a good model below the tolerance)\n   * @param {number} [options.tolerance=1e-5]\n   * @param {boolean} [options.scale=true] - rescale dataset using mean.\n   * @param {object} model - for load purposes.\n   */\n  constructor(options, model) {\n    if (options === true) {\n      this.meanX = model.meanX;\n      this.stdDevX = model.stdDevX;\n      this.meanY = model.meanY;\n      this.stdDevY = model.stdDevY;\n      this.PBQ = Matrix.checkMatrix(model.PBQ);\n      this.R2X = model.R2X;\n      this.scale = model.scale;\n      this.scaleMethod = model.scaleMethod;\n      this.tolerance = model.tolerance;\n    } else {\n      let { tolerance = 1e-5, scale = true } = options;\n      this.tolerance = tolerance;\n      this.scale = scale;\n      this.latentVectors = options.latentVectors;\n    }\n  }\n\n  /**\n   * Fits the model with the given data and predictions, in this function is calculated the\n   * following outputs:\n   *\n   * T - Score matrix of X\n   * P - Loading matrix of X\n   * U - Score matrix of Y\n   * Q - Loading matrix of Y\n   * B - Matrix of regression coefficient\n   * W - Weight matrix of X\n   *\n   * @param {Matrix|Array} trainingSet\n   * @param {Matrix|Array} trainingValues\n   */\n  train(trainingSet, trainingValues) {\n    trainingSet = Matrix.checkMatrix(trainingSet);\n    trainingValues = Matrix.checkMatrix(trainingValues);\n\n    if (trainingSet.length !== trainingValues.length) {\n      throw new RangeError(\n        'The number of X rows must be equal to the number of Y rows',\n      );\n    }\n\n    this.meanX = trainingSet.mean('column');\n    this.stdDevX = trainingSet.standardDeviation('column', {\n      mean: this.meanX,\n      unbiased: true,\n    });\n    this.meanY = trainingValues.mean('column');\n    this.stdDevY = trainingValues.standardDeviation('column', {\n      mean: this.meanY,\n      unbiased: true,\n    });\n\n    if (this.scale) {\n      trainingSet = trainingSet\n        .clone()\n        .subRowVector(this.meanX)\n        .divRowVector(this.stdDevX);\n      trainingValues = trainingValues\n        .clone()\n        .subRowVector(this.meanY)\n        .divRowVector(this.stdDevY);\n    }\n\n    if (this.latentVectors === undefined) {\n      this.latentVectors = Math.min(trainingSet.rows - 1, trainingSet.columns);\n    }\n\n    let rx = trainingSet.rows;\n    let cx = trainingSet.columns;\n    let ry = trainingValues.rows;\n    let cy = trainingValues.columns;\n\n    let ssqXcal = trainingSet\n      .clone()\n      .mul(trainingSet)\n      .sum(); // for the r²\n    let sumOfSquaresY = trainingValues\n      .clone()\n      .mul(trainingValues)\n      .sum();\n\n    let tolerance = this.tolerance;\n    let n = this.latentVectors;\n    let T = Matrix.zeros(rx, n);\n    let P = Matrix.zeros(cx, n);\n    let U = Matrix.zeros(ry, n);\n    let Q = Matrix.zeros(cy, n);\n    let B = Matrix.zeros(n, n);\n    let W = P.clone();\n    let k = 0;\n\n    while (Utils.norm(trainingValues) > tolerance && k < n) {\n      let transposeX = trainingSet.transpose();\n      let transposeY = trainingValues.transpose();\n\n      let tIndex = maxSumColIndex(trainingSet.clone().mul(trainingSet));\n      let uIndex = maxSumColIndex(trainingValues.clone().mul(trainingValues));\n\n      let t1 = trainingSet.getColumnVector(tIndex);\n      let u = trainingValues.getColumnVector(uIndex);\n      var t = Matrix.zeros(rx, 1);\n\n      while (Utils.norm(t1.clone().sub(t)) > tolerance) {\n        var w = transposeX.mmul(u);\n        w.div(Utils.norm(w));\n        t = t1;\n        t1 = trainingSet.mmul(w);\n        var q = transposeY.mmul(t1);\n        q.div(Utils.norm(q));\n        u = trainingValues.mmul(q);\n      }\n\n      t = t1;\n      let num = transposeX.mmul(t);\n      let den = t\n        .transpose()\n        .mmul(t)\n        .get(0, 0);\n      var p = num.div(den);\n      let pnorm = Utils.norm(p);\n      p.div(pnorm);\n      t.mul(pnorm);\n      w.mul(pnorm);\n\n      num = u.transpose().mmul(t);\n      den = t\n        .transpose()\n        .mmul(t)\n        .get(0, 0);\n      let b = num.div(den).get(0, 0);\n      trainingSet.sub(t.mmul(p.transpose()));\n      trainingValues.sub(\n        t\n          .clone()\n          .mul(b)\n          .mmul(q.transpose()),\n      );\n\n      T.setColumn(k, t);\n      P.setColumn(k, p);\n      U.setColumn(k, u);\n      Q.setColumn(k, q);\n      W.setColumn(k, w);\n\n      B.set(k, k, b);\n      k++;\n    }\n\n    k--;\n    T = T.subMatrix(0, T.rows - 1, 0, k);\n    P = P.subMatrix(0, P.rows - 1, 0, k);\n    U = U.subMatrix(0, U.rows - 1, 0, k);\n    Q = Q.subMatrix(0, Q.rows - 1, 0, k);\n    W = W.subMatrix(0, W.rows - 1, 0, k);\n    B = B.subMatrix(0, k, 0, k);\n\n    // TODO: review of R2Y\n    // this.R2Y = t.transpose().mmul(t).mul(q[k][0]*q[k][0]).divS(ssqYcal)[0][0];\n    //\n    this.ssqYcal = sumOfSquaresY;\n    this.E = trainingSet;\n    this.F = trainingValues;\n    this.T = T;\n    this.P = P;\n    this.U = U;\n    this.Q = Q;\n    this.W = W;\n    this.B = B;\n    this.PBQ = P.mmul(B).mmul(Q.transpose());\n    this.R2X = t\n      .transpose()\n      .mmul(t)\n      .mmul(p.transpose().mmul(p))\n      .div(ssqXcal)\n      .get(0, 0);\n  }\n\n  /**\n   * Predicts the behavior of the given dataset.\n   * @param {Matrix|Array} dataset - data to be predicted.\n   * @return {Matrix} - predictions of each element of the dataset.\n   */\n  predict(dataset) {\n    let X = Matrix.checkMatrix(dataset);\n    if (this.scale) {\n      X = X.subRowVector(this.meanX).divRowVector(this.stdDevX);\n    }\n    let Y = X.mmul(this.PBQ);\n    Y = Y.mulRowVector(this.stdDevY).addRowVector(this.meanY);\n    return Y;\n  }\n\n  /**\n   * Returns the explained variance on training of the PLS model\n   * @return {number}\n   */\n  getExplainedVariance() {\n    return this.R2X;\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    return {\n      name: 'PLS',\n      R2X: this.R2X,\n      meanX: this.meanX,\n      stdDevX: this.stdDevX,\n      meanY: this.meanY,\n      stdDevY: this.stdDevY,\n      PBQ: this.PBQ,\n      tolerance: this.tolerance,\n      scale: this.scale,\n    };\n  }\n\n  /**\n   * Load a PLS model from a JSON Object\n   * @param {object} model\n   * @return {PLS} - PLS object from the given model\n   */\n  static load(model) {\n    if (model.name !== 'PLS') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n    return new PLS(true, model);\n  }\n}\n\n/**\n * @private\n * Function that returns the index where the sum of each\n * column vector is maximum.\n * @param {Matrix} data\n * @return {number} index of the maximum\n */\nfunction maxSumColIndex(data) {\n  return Matrix.rowVector(data.sum('column')).maxIndex()[0];\n}\n","import { Matrix, SingularValueDecomposition, inverse } from 'ml-matrix';\n\nimport { initializeMatrices } from './utils';\n\n/**\n * @class KOPLS\n */\nexport class KOPLS {\n  /**\n   * Constructor for Kernel-based Orthogonal Projections to Latent Structures (K-OPLS)\n   * @param {object} options\n   * @param {number} [options.predictiveComponents] - Number of predictive components to use.\n   * @param {number} [options.orthogonalComponents] - Number of Y-Orthogonal components.\n   * @param {Kernel} [options.kernel] - Kernel object to apply, see [ml-kernel](https://github.com/mljs/kernel).\n   * @param {object} model - for load purposes.\n   */\n  constructor(options, model) {\n    if (options === true) {\n      this.trainingSet = new Matrix(model.trainingSet);\n      this.YLoadingMat = new Matrix(model.YLoadingMat);\n      this.SigmaPow = new Matrix(model.SigmaPow);\n      this.YScoreMat = new Matrix(model.YScoreMat);\n      this.predScoreMat = initializeMatrices(model.predScoreMat, false);\n      this.YOrthLoadingVec = initializeMatrices(model.YOrthLoadingVec, false);\n      this.YOrthEigen = model.YOrthEigen;\n      this.YOrthScoreMat = initializeMatrices(model.YOrthScoreMat, false);\n      this.toNorm = initializeMatrices(model.toNorm, false);\n      this.TURegressionCoeff = initializeMatrices(\n        model.TURegressionCoeff,\n        false,\n      );\n      this.kernelX = initializeMatrices(model.kernelX, true);\n      this.kernel = model.kernel;\n      this.orthogonalComp = model.orthogonalComp;\n      this.predictiveComp = model.predictiveComp;\n    } else {\n      if (options.predictiveComponents === undefined) {\n        throw new RangeError('no predictive components found!');\n      }\n      if (options.orthogonalComponents === undefined) {\n        throw new RangeError('no orthogonal components found!');\n      }\n      if (options.kernel === undefined) {\n        throw new RangeError('no kernel found!');\n      }\n\n      this.orthogonalComp = options.orthogonalComponents;\n      this.predictiveComp = options.predictiveComponents;\n      this.kernel = options.kernel;\n    }\n  }\n\n  /**\n   * Train the K-OPLS model with the given training set and labels.\n   * @param {Matrix|Array} trainingSet\n   * @param {Matrix|Array} trainingValues\n   */\n  train(trainingSet, trainingValues) {\n    trainingSet = Matrix.checkMatrix(trainingSet);\n    trainingValues = Matrix.checkMatrix(trainingValues);\n\n    // to save and compute kernel with the prediction dataset.\n    this.trainingSet = trainingSet.clone();\n\n    let kernelX = this.kernel.compute(trainingSet);\n\n    let Identity = Matrix.eye(kernelX.rows, kernelX.rows, 1);\n    let temp = kernelX;\n    kernelX = new Array(this.orthogonalComp + 1);\n    for (let i = 0; i < this.orthogonalComp + 1; i++) {\n      kernelX[i] = new Array(this.orthogonalComp + 1);\n    }\n    kernelX[0][0] = temp;\n\n    let result = new SingularValueDecomposition(\n      trainingValues\n        .transpose()\n        .mmul(kernelX[0][0])\n        .mmul(trainingValues),\n      {\n        computeLeftSingularVectors: true,\n        computeRightSingularVectors: false,\n      },\n    );\n    let YLoadingMat = result.leftSingularVectors;\n    let Sigma = result.diagonalMatrix;\n\n    YLoadingMat = YLoadingMat.subMatrix(\n      0,\n      YLoadingMat.rows - 1,\n      0,\n      this.predictiveComp - 1,\n    );\n    Sigma = Sigma.subMatrix(\n      0,\n      this.predictiveComp - 1,\n      0,\n      this.predictiveComp - 1,\n    );\n\n    let YScoreMat = trainingValues.mmul(YLoadingMat);\n\n    let predScoreMat = new Array(this.orthogonalComp + 1);\n    let TURegressionCoeff = new Array(this.orthogonalComp + 1);\n    let YOrthScoreMat = new Array(this.orthogonalComp);\n    let YOrthLoadingVec = new Array(this.orthogonalComp);\n    let YOrthEigen = new Array(this.orthogonalComp);\n    let YOrthScoreNorm = new Array(this.orthogonalComp);\n\n    let SigmaPow = Matrix.pow(Sigma, -0.5);\n    // to avoid errors, check infinity\n    SigmaPow.apply(function(i, j) {\n      if (this.get(i, j) === Infinity) {\n        this.set(i, j, 0);\n      }\n    });\n\n    for (let i = 0; i < this.orthogonalComp; ++i) {\n      predScoreMat[i] = kernelX[0][i]\n        .transpose()\n        .mmul(YScoreMat)\n        .mmul(SigmaPow);\n\n      let TpiPrime = predScoreMat[i].transpose();\n      TURegressionCoeff[i] = inverse(TpiPrime.mmul(predScoreMat[i]))\n        .mmul(TpiPrime)\n        .mmul(YScoreMat);\n\n      result = new SingularValueDecomposition(\n        TpiPrime.mmul(\n          Matrix.sub(kernelX[i][i], predScoreMat[i].mmul(TpiPrime)),\n        ).mmul(predScoreMat[i]),\n        {\n          computeLeftSingularVectors: true,\n          computeRightSingularVectors: false,\n        },\n      );\n      let CoTemp = result.leftSingularVectors;\n      let SoTemp = result.diagonalMatrix;\n\n      YOrthLoadingVec[i] = CoTemp.subMatrix(0, CoTemp.rows - 1, 0, 0);\n      YOrthEigen[i] = SoTemp.get(0, 0);\n\n      YOrthScoreMat[i] = Matrix.sub(\n        kernelX[i][i],\n        predScoreMat[i].mmul(TpiPrime),\n      )\n        .mmul(predScoreMat[i])\n        .mmul(YOrthLoadingVec[i])\n        .mul(Math.pow(YOrthEigen[i], -0.5));\n\n      let toiPrime = YOrthScoreMat[i].transpose();\n      YOrthScoreNorm[i] = Matrix.sqrt(toiPrime.mmul(YOrthScoreMat[i]));\n\n      YOrthScoreMat[i] = YOrthScoreMat[i].divRowVector(YOrthScoreNorm[i]);\n\n      let ITo = Matrix.sub(\n        Identity,\n        YOrthScoreMat[i].mmul(YOrthScoreMat[i].transpose()),\n      );\n\n      kernelX[0][i + 1] = kernelX[0][i].mmul(ITo);\n      kernelX[i + 1][i + 1] = ITo.mmul(kernelX[i][i]).mmul(ITo);\n    }\n\n    let lastScoreMat = (predScoreMat[this.orthogonalComp] = kernelX[0][\n      this.orthogonalComp\n    ]\n      .transpose()\n      .mmul(YScoreMat)\n      .mmul(SigmaPow));\n\n    let lastTpPrime = lastScoreMat.transpose();\n    TURegressionCoeff[this.orthogonalComp] = inverse(\n      lastTpPrime.mmul(lastScoreMat),\n    )\n      .mmul(lastTpPrime)\n      .mmul(YScoreMat);\n\n    this.YLoadingMat = YLoadingMat;\n    this.SigmaPow = SigmaPow;\n    this.YScoreMat = YScoreMat;\n    this.predScoreMat = predScoreMat;\n    this.YOrthLoadingVec = YOrthLoadingVec;\n    this.YOrthEigen = YOrthEigen;\n    this.YOrthScoreMat = YOrthScoreMat;\n    this.toNorm = YOrthScoreNorm;\n    this.TURegressionCoeff = TURegressionCoeff;\n    this.kernelX = kernelX;\n  }\n\n  /**\n   * Predicts the output given the matrix to predict.\n   * @param {Matrix|Array} toPredict\n   * @return {{y: Matrix, predScoreMat: Array<Matrix>, predYOrthVectors: Array<Matrix>}} predictions\n   */\n  predict(toPredict) {\n    let KTestTrain = this.kernel.compute(toPredict, this.trainingSet);\n\n    let temp = KTestTrain;\n    KTestTrain = new Array(this.orthogonalComp + 1);\n    for (let i = 0; i < this.orthogonalComp + 1; i++) {\n      KTestTrain[i] = new Array(this.orthogonalComp + 1);\n    }\n    KTestTrain[0][0] = temp;\n\n    let YOrthScoreVector = new Array(this.orthogonalComp);\n    let predScoreMat = new Array(this.orthogonalComp);\n\n    let i;\n    for (i = 0; i < this.orthogonalComp; ++i) {\n      predScoreMat[i] = KTestTrain[i][0]\n        .mmul(this.YScoreMat)\n        .mmul(this.SigmaPow);\n\n      YOrthScoreVector[i] = Matrix.sub(\n        KTestTrain[i][i],\n        predScoreMat[i].mmul(this.predScoreMat[i].transpose()),\n      )\n        .mmul(this.predScoreMat[i])\n        .mmul(this.YOrthLoadingVec[i])\n        .mul(Math.pow(this.YOrthEigen[i], -0.5));\n\n      YOrthScoreVector[i] = YOrthScoreVector[i].divRowVector(this.toNorm[i]);\n\n      let scoreMatPrime = this.YOrthScoreMat[i].transpose();\n      KTestTrain[i + 1][0] = Matrix.sub(\n        KTestTrain[i][0],\n        YOrthScoreVector[i]\n          .mmul(scoreMatPrime)\n          .mmul(this.kernelX[0][i].transpose()),\n      );\n\n      let p1 = Matrix.sub(\n        KTestTrain[i][0],\n        KTestTrain[i][i].mmul(this.YOrthScoreMat[i]).mmul(scoreMatPrime),\n      );\n      let p2 = YOrthScoreVector[i].mmul(scoreMatPrime).mmul(this.kernelX[i][i]);\n      let p3 = p2.mmul(this.YOrthScoreMat[i]).mmul(scoreMatPrime);\n\n      KTestTrain[i + 1][i + 1] = p1.sub(p2).add(p3);\n    }\n\n    predScoreMat[i] = KTestTrain[i][0].mmul(this.YScoreMat).mmul(this.SigmaPow);\n    let prediction = predScoreMat[i]\n      .mmul(this.TURegressionCoeff[i])\n      .mmul(this.YLoadingMat.transpose());\n\n    return {\n      prediction: prediction,\n      predScoreMat: predScoreMat,\n      predYOrthVectors: YOrthScoreVector,\n    };\n  }\n\n  /**\n   * Export the current model to JSON.\n   * @return {object} - Current model.\n   */\n  toJSON() {\n    return {\n      name: 'K-OPLS',\n      YLoadingMat: this.YLoadingMat,\n      SigmaPow: this.SigmaPow,\n      YScoreMat: this.YScoreMat,\n      predScoreMat: this.predScoreMat,\n      YOrthLoadingVec: this.YOrthLoadingVec,\n      YOrthEigen: this.YOrthEigen,\n      YOrthScoreMat: this.YOrthScoreMat,\n      toNorm: this.toNorm,\n      TURegressionCoeff: this.TURegressionCoeff,\n      kernelX: this.kernelX,\n      trainingSet: this.trainingSet,\n      orthogonalComp: this.orthogonalComp,\n      predictiveComp: this.predictiveComp,\n    };\n  }\n\n  /**\n   * Load a K-OPLS with the given model.\n   * @param {object} model\n   * @param {Kernel} kernel - kernel used on the model, see [ml-kernel](https://github.com/mljs/kernel).\n   * @return {KOPLS}\n   */\n  static load(model, kernel) {\n    if (model.name !== 'K-OPLS') {\n      throw new RangeError(`Invalid model: ${model.name}`);\n    }\n\n    if (!kernel) {\n      throw new RangeError('You must provide a kernel for the model!');\n    }\n\n    model.kernel = kernel;\n    return new KOPLS(true, model);\n  }\n}\n","/**\n *  Constructs a confusion matrix\n * @class ConfusionMatrix\n * @example\n * const CM = new ConfusionMatrix([[13, 2], [10, 5]], ['cat', 'dog'])\n * @param {Array<Array<number>>} matrix - The confusion matrix, a 2D Array. Rows represent the actual label and columns\n *     the predicted label.\n * @param {Array<any>} labels - Labels of the confusion matrix, a 1D Array\n */\nexport default class ConfusionMatrix {\n  constructor(matrix, labels) {\n    if (matrix.length !== matrix[0].length) {\n      throw new Error('Confusion matrix must be square');\n    }\n    if (labels.length !== matrix.length) {\n      throw new Error(\n        'Confusion matrix and labels should have the same length',\n      );\n    }\n    this.labels = labels;\n    this.matrix = matrix;\n  }\n\n  /**\n   * Construct confusion matrix from the predicted and actual labels (classes). Be sure to provide the arguments in\n   * the correct order!\n   * @param {Array<any>} actual  - The predicted labels of the classification\n   * @param {Array<any>} predicted     - The actual labels of the classification. Has to be of same length as\n   *     predicted.\n   * @param {object} [options] - Additional options\n   * @param {Array<any>} [options.labels] - The list of labels that should be used. If not provided the distinct set\n   *     of labels present in predicted and actual is used. Labels are compared using the strict equality operator\n   *     '==='\n   * @return {ConfusionMatrix} - Confusion matrix\n   */\n  static fromLabels(actual, predicted, options = {}) {\n    if (predicted.length !== actual.length) {\n      throw new Error('predicted and actual must have the same length');\n    }\n    let distinctLabels;\n    if (options.labels) {\n      distinctLabels = new Set(options.labels);\n    } else {\n      distinctLabels = new Set([...actual, ...predicted]);\n    }\n    distinctLabels = Array.from(distinctLabels);\n    if (options.sort) {\n      distinctLabels.sort(options.sort);\n    }\n\n    // Create confusion matrix and fill with 0's\n    const matrix = Array.from({ length: distinctLabels.length });\n    for (let i = 0; i < matrix.length; i++) {\n      matrix[i] = new Array(matrix.length);\n      matrix[i].fill(0);\n    }\n\n    for (let i = 0; i < predicted.length; i++) {\n      const actualIdx = distinctLabels.indexOf(actual[i]);\n      const predictedIdx = distinctLabels.indexOf(predicted[i]);\n      if (actualIdx >= 0 && predictedIdx >= 0) {\n        matrix[actualIdx][predictedIdx]++;\n      }\n    }\n\n    return new ConfusionMatrix(matrix, distinctLabels);\n  }\n\n  /**\n   * Get the confusion matrix\n   * @return {Array<Array<number> >}\n   */\n  getMatrix() {\n    return this.matrix;\n  }\n\n  getLabels() {\n    return this.labels;\n  }\n\n  /**\n   * Get the total number of samples\n   * @return {number}\n   */\n  getTotalCount() {\n    let predicted = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      for (let j = 0; j < this.matrix.length; j++) {\n        predicted += this.matrix[i][j];\n      }\n    }\n    return predicted;\n  }\n\n  /**\n   * Get the total number of true predictions\n   * @return {number}\n   */\n  getTrueCount() {\n    let count = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      count += this.matrix[i][i];\n    }\n    return count;\n  }\n\n  /**\n   * Get the total number of false predictions.\n   * @return {number}\n   */\n  getFalseCount() {\n    return this.getTotalCount() - this.getTrueCount();\n  }\n\n  /**\n   * Get the number of true positive predictions.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getTruePositiveCount(label) {\n    const index = this.getIndex(label);\n    return this.matrix[index][index];\n  }\n\n  /**\n   * Get the number of true negative predictions\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getTrueNegativeCount(label) {\n    const index = this.getIndex(label);\n    let count = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      for (let j = 0; j < this.matrix.length; j++) {\n        if (i !== index && j !== index) {\n          count += this.matrix[i][j];\n        }\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Get the number of false positive predictions.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalsePositiveCount(label) {\n    const index = this.getIndex(label);\n    let count = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      if (i !== index) {\n        count += this.matrix[i][index];\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Get the number of false negative predictions.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalseNegativeCount(label) {\n    const index = this.getIndex(label);\n    let count = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      if (i !== index) {\n        count += this.matrix[index][i];\n      }\n    }\n    return count;\n  }\n\n  /**\n   * Get the number of real positive samples.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getPositiveCount(label) {\n    return this.getTruePositiveCount(label) + this.getFalseNegativeCount(label);\n  }\n\n  /**\n   * Get the number of real negative samples.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getNegativeCount(label) {\n    return this.getTrueNegativeCount(label) + this.getFalsePositiveCount(label);\n  }\n\n  /**\n   * Get the index in the confusion matrix that corresponds to the given label\n   * @param {any} label - The label to search for\n   * @throws if the label is not found\n   * @return {number}\n   */\n  getIndex(label) {\n    const index = this.labels.indexOf(label);\n    if (index === -1) throw new Error('The label does not exist');\n    return index;\n  }\n\n  /**\n   * Get the true positive rate a.k.a. sensitivity. Computes the ratio between the number of true positive predictions and the total number of positive samples.\n   * {@link https://en.wikipedia.org/wiki/Sensitivity_and_specificity}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number} - The true positive rate [0-1]\n   */\n  getTruePositiveRate(label) {\n    return this.getTruePositiveCount(label) / this.getPositiveCount(label);\n  }\n\n  /**\n   * Get the true negative rate a.k.a. specificity. Computes the ration between the number of true negative predictions and the total number of negative samples.\n   * {@link https://en.wikipedia.org/wiki/Sensitivity_and_specificity}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getTrueNegativeRate(label) {\n    return this.getTrueNegativeCount(label) / this.getNegativeCount(label);\n  }\n\n  /**\n   * Get the positive predictive value a.k.a. precision. Computes TP / (TP + FP)\n   * {@link https://en.wikipedia.org/wiki/Positive_and_negative_predictive_values}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getPositivePredictiveValue(label) {\n    const TP = this.getTruePositiveCount(label);\n    return TP / (TP + this.getFalsePositiveCount(label));\n  }\n\n  /**\n   * Negative predictive value\n   * {@link https://en.wikipedia.org/wiki/Positive_and_negative_predictive_values}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getNegativePredictiveValue(label) {\n    const TN = this.getTrueNegativeCount(label);\n    return TN / (TN + this.getFalseNegativeCount(label));\n  }\n\n  /**\n   * False negative rate a.k.a. miss rate.\n   * {@link https://en.wikipedia.org/wiki/Type_I_and_type_II_errors#False_positive_and_false_negative_rates}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalseNegativeRate(label) {\n    return 1 - this.getTruePositiveRate(label);\n  }\n\n  /**\n   * False positive rate a.k.a. fall-out rate.\n   * {@link https://en.wikipedia.org/wiki/Type_I_and_type_II_errors#False_positive_and_false_negative_rates}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalsePositiveRate(label) {\n    return 1 - this.getTrueNegativeRate(label);\n  }\n\n  /**\n   * False discovery rate (FDR)\n   * {@link https://en.wikipedia.org/wiki/False_discovery_rate}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalseDiscoveryRate(label) {\n    const FP = this.getFalsePositiveCount(label);\n    return FP / (FP + this.getTruePositiveCount(label));\n  }\n\n  /**\n   * False omission rate (FOR)\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getFalseOmissionRate(label) {\n    const FN = this.getFalseNegativeCount(label);\n    return FN / (FN + this.getTruePositiveCount(label));\n  }\n\n  /**\n   * F1 score\n   * {@link https://en.wikipedia.org/wiki/F1_score}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getF1Score(label) {\n    const TP = this.getTruePositiveCount(label);\n    return (\n      (2 * TP) /\n      (2 * TP +\n        this.getFalsePositiveCount(label) +\n        this.getFalseNegativeCount(label))\n    );\n  }\n\n  /**\n   * Matthews correlation coefficient (MCC)\n   * {@link https://en.wikipedia.org/wiki/Matthews_correlation_coefficient}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getMatthewsCorrelationCoefficient(label) {\n    const TP = this.getTruePositiveCount(label);\n    const TN = this.getTrueNegativeCount(label);\n    const FP = this.getFalsePositiveCount(label);\n    const FN = this.getFalseNegativeCount(label);\n    return (\n      (TP * TN - FP * FN) /\n      Math.sqrt((TP + FP) * (TP + FN) * (TN + FP) * (TN + FN))\n    );\n  }\n\n  /**\n   * Informedness\n   * {@link https://en.wikipedia.org/wiki/Youden%27s_J_statistic}\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getInformedness(label) {\n    return (\n      this.getTruePositiveRate(label) + this.getTrueNegativeRate(label) - 1\n    );\n  }\n\n  /**\n   * Markedness\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {number}\n   */\n  getMarkedness(label) {\n    return (\n      this.getPositivePredictiveValue(label) +\n      this.getNegativePredictiveValue(label) -\n      1\n    );\n  }\n\n  /**\n   * Get the confusion table.\n   * @param {any} label - The label that should be considered \"positive\"\n   * @return {Array<Array<number> >} - The 2x2 confusion table. [[TP, FN], [FP, TN]]\n   */\n  getConfusionTable(label) {\n    return [\n      [this.getTruePositiveCount(label), this.getFalseNegativeCount(label)],\n      [this.getFalsePositiveCount(label), this.getTrueNegativeCount(label)],\n    ];\n  }\n\n  /**\n   * Get total accuracy.\n   * @return {number} - The ratio between the number of true predictions and total number of classifications ([0-1])\n   */\n  getAccuracy() {\n    let correct = 0;\n    let incorrect = 0;\n    for (let i = 0; i < this.matrix.length; i++) {\n      for (let j = 0; j < this.matrix.length; j++) {\n        if (i === j) correct += this.matrix[i][j];\n        else incorrect += this.matrix[i][j];\n      }\n    }\n    return correct / (correct + incorrect);\n  }\n\n  /**\n   * Returns the element in the confusion matrix that corresponds to the given actual and predicted labels.\n   * @param {any} actual - The true label\n   * @param {any} predicted - The predicted label\n   * @return {number} - The element in the confusion matrix\n   */\n  getCount(actual, predicted) {\n    const actualIndex = this.getIndex(actual);\n    const predictedIndex = this.getIndex(predicted);\n    return this.matrix[actualIndex][predictedIndex];\n  }\n\n  /**\n   * Compute the general prediction accuracy\n   * @deprecated Use getAccuracy\n   * @return {number} - The prediction accuracy ([0-1]\n   */\n  get accuracy() {\n    return this.getAccuracy();\n  }\n\n  /**\n   * Compute the number of predicted observations\n   * @deprecated Use getTotalCount\n   * @return {number}\n   */\n  get total() {\n    return this.getTotalCount();\n  }\n}\n","/**\n * get folds indexes\n * @param {Array} features\n * @param {Number} k - number of folds, a\n */\nexport function getFolds(features, k = 5) {\n  let N = features.length;\n  let allIdx = new Array(N);\n  for (let i = 0; i < N; i++) {\n    allIdx[i] = i;\n  }\n\n  let l = Math.floor(N / k);\n  // create random k-folds\n  let current = [];\n  let folds = [];\n  while (allIdx.length) {\n    let randi = Math.floor(Math.random() * allIdx.length);\n    current.push(allIdx[randi]);\n    allIdx.splice(randi, 1);\n    if (current.length === l) {\n      folds.push(current);\n      current = [];\n    }\n  }\n  // we push the remaining to the last fold so that the total length is\n  // preserved. Otherwise the Q2 will fail.\n  if (current.length) current.forEach((e) => folds[k - 1].push(e));\n  folds = folds.slice(0, k);\n\n  let foldsIndex = folds.map((x, idx) => ({\n    testIndex: x,\n    trainIndex: [].concat(...folds.filter((el, idx2) => idx2 !== idx)),\n  }));\n  return foldsIndex;\n}\n","import Matrix from 'ml-matrix';\n\nimport { norm, pow2array } from './utils.js';\n\nlet Utils = {};\nUtils.norm = function norm(X) {\n  return Math.sqrt(\n    X.clone()\n      .apply(pow2array)\n      .sum(),\n  );\n};\n\n/**\n * OPLS loop\n * @param {Array} x a matrix with features\n * @param {Array} y an array of labels (dependent variable)\n * @param {Object} options an object with options\n * @return {Object} an object with model (filteredX: err,\n    loadingsXOrtho: pOrtho,\n    scoresXOrtho: tOrtho,\n    weightsXOrtho: wOrtho,\n    weightsPred: w,\n    loadingsXpred: p,\n    scoresXpred: t,\n    loadingsY:)\n */\nexport function oplsNIPALS(x, y, options = {}) {\n  const { numberOSC = 100 } = options;\n\n  let X = Matrix.checkMatrix(x.clone());\n  let Y = Matrix.checkMatrix(y.clone());\n\n  let u = Y.getColumnVector(0);\n\n  let diff = 1;\n  let t, c, w, uNew;\n  for (let i = 0; i < numberOSC && diff > 1e-10; i++) {\n    w = u\n      .transpose()\n      .mmul(X)\n      .div(\n        u\n          .transpose()\n          .mmul(u)\n          .get(0, 0),\n      );\n    w = w.transpose().div(norm(w));\n\n    t = X.mmul(w).div(\n      w\n        .transpose()\n        .mmul(w)\n        .get(0, 0),\n    ); // t_h paso 3\n\n    // calc loading\n    c = t\n      .transpose()\n      .mmul(Y)\n      .div(\n        t\n          .transpose()\n          .mmul(t)\n          .get(0, 0),\n      );\n\n    // calc new u and compare with one in previus iteration (stop criterion)\n    uNew = Y.mmul(c.transpose());\n    uNew = uNew.div(\n      c\n        .transpose()\n        .mmul(c)\n        .get(0, 0),\n    );\n\n    if (i > 0) {\n      diff =\n        uNew\n          .clone()\n          .sub(u)\n          .pow(2)\n          .sum() /\n        uNew\n          .clone()\n          .pow(2)\n          .sum();\n    }\n\n    u = uNew.clone();\n  }\n\n  // calc loadings\n  let p = t\n    .transpose()\n    .mmul(X)\n    .div(\n      t\n        .transpose()\n        .mmul(t)\n        .get(0, 0),\n    );\n\n  let wOrtho = p.clone().sub(\n    w\n      .transpose()\n      .mmul(p.transpose())\n      .div(\n        w\n          .transpose()\n          .mmul(w)\n          .get(0, 0),\n      )\n      .mmul(w.transpose()),\n  );\n  wOrtho.div(Utils.norm(wOrtho));\n\n  // orthogonal scores\n  let tOrtho = X.mmul(wOrtho.transpose()).div(\n    wOrtho.mmul(wOrtho.transpose()).get(0, 0),\n  );\n\n  // orthogonal loadings\n  let pOrtho = tOrtho\n    .transpose()\n    .mmul(X)\n    .div(\n      tOrtho\n        .transpose()\n        .mmul(tOrtho)\n        .get(0, 0),\n    );\n\n  // filtered data\n  let err = X.clone().sub(tOrtho.mmul(pOrtho));\n  return {\n    filteredX: err,\n    weightsXOrtho: wOrtho,\n    loadingsXOrtho: pOrtho,\n    scoresXOrtho: tOrtho,\n    weightsXPred: w,\n    loadingsXpred: p,\n    scoresXpred: t,\n    loadingsY: c,\n  };\n}\n","/**\n * Get total sum of square\n * @param {Array} x an array\n * @return {Number} - the sum of the squares\n */\nexport function tss(x) {\n  return x\n    .clone()\n    .mul(x.clone())\n    .sum();\n}\n","import { Matrix, NIPALS } from 'ml-matrix';\nimport ConfusionMatrix from 'ml-confusion-matrix';\nimport { getFolds } from 'ml-cross-validation';\n\n// import { getTrainTest } from 'ml-cross-validation';\n\nimport { oplsNIPALS } from './oplsNIPALS.js';\n// import { getFolds } from './getFolds.js';\nimport { tss } from './tss.js';\n\n/**\n * Creates new OPLS (orthogonal partial latent structures) from features and labels.\n * @param {Matrix} data - matrix containing data (X).\n * @param {Array} labels - 1D Array containing metadata (Y).\n * @param {Object} [options]\n * @param {number} [options.nComp = 3] - number of latent structures computed.\n * @param {boolean} [options.center = true] - should the data be centered (subtract the mean).\n * @param {boolean} [options.scale = false] - should the data be scaled (divide by the standard deviation).\n * @param {Array} [options.cvFolds = []] - allows to provide folds as 2D array for testing purpose.\n * */\n\nexport class OPLS {\n  constructor(data, labels, options = {}) {\n    if (data === true) {\n      const opls = options;\n      this.center = opls.center;\n      this.scale = opls.scale;\n      this.means = opls.means;\n      this.meansY = opls.meansY;\n      this.stdevs = opls.stdevs;\n      this.stdevs = opls.stdevsY;\n      this.model = opls.model;\n      this.tCV = opls.tCV;\n      this.tOrthCV = opls.tOrthCV;\n      this.yHatCV = opls.yHatCV;\n      this.mode = opls.mode;\n      return;\n    }\n\n    let features = data.clone();\n    // set default values\n    // cvFolds allows to define folds for testing purpose\n    const { nComp = 3, center = true, scale = true, cvFolds = [] } = options;\n\n    let group;\n    if (typeof labels[0] === 'number') {\n      // numeric labels: OPLS regression is used\n      this.mode = 'regression';\n      group = Matrix.from1DArray(labels.length, 1, labels);\n    } else if (typeof labels[0] === 'string') {\n      // non-numeric labels: OPLS-DA is used\n      this.mode = 'discriminant_analysis';\n      group = labels;\n      throw new Error('discriminant analysis is not yet supported');\n    }\n\n    // check types of features and labels\n    if (features.constructor.name !== 'Matrix') {\n      throw new TypeError('features must be of class Matrix');\n    }\n    // getting center and scale the features (all)\n    this.center = center;\n    if (this.center) {\n      this.means = features.mean('column');\n      this.meansY = group.mean('column');\n      // console.log('training mean: ', this.means);\n    } else {\n      this.stdevs = null;\n    }\n    this.scale = scale;\n    if (this.scale) {\n      this.stdevs = features.standardDeviation('column');\n      this.stdevsY = group.standardDeviation('column');\n      // console.log('training sdevs: ', this.stdevs);\n    } else {\n      this.means = null;\n    }\n\n    // check and remove for features with sd = 0 TODO here\n    // check opls.R line 70\n\n    let folds;\n    if (cvFolds.length > 0) {\n      folds = cvFolds;\n    } else {\n      folds = getFolds(labels, 5);\n    }\n\n    let Q2 = [];\n    this.model = [];\n\n    this.tCV = [];\n    this.tOrthCV = [];\n    this.yHatCV = [];\n    let oplsCV = [];\n\n    let modelNC = [];\n\n    // this code could be made more efficient by reverting the order of the loops\n    // this is a legacy loop to be consistent with R code from MetaboMate package\n    // this allows for having statistic (R2) from CV to decide wether to continue\n    // with more latent structures\n    let nc;\n    for (nc = 0; nc < nComp; nc++) {\n      let yHatk = new Matrix(group.rows, 1);\n      let tPredk = new Matrix(group.rows, 1);\n      let tOrthk = new Matrix(group.rows, 1);\n      let oplsk = [];\n\n      let f = 0;\n      for (let fold of folds) {\n        let trainTest = this._getTrainTest(features, group, fold);\n        let testXk = trainTest.testFeatures;\n        let Xk = trainTest.trainFeatures;\n        let Yk = trainTest.trainLabels;\n\n        // determine center and scale of training set\n        let dataCenter = Xk.mean('column');\n        let dataSD = Xk.standardDeviation('column');\n\n        // center and scale training set\n        if (center) {\n          Xk.center('column');\n          Yk.center('column');\n        }\n\n        if (scale) {\n          Xk.scale('column');\n          Yk.scale('column');\n        }\n\n        // perform opls\n        if (nc === 0) {\n          oplsk[f] = oplsNIPALS(Xk, Yk);\n        } else {\n          oplsk[f] = oplsNIPALS(oplsCV[nc - 1][f].filteredX, Yk);\n        }\n        // store model for next component\n        oplsCV[nc] = oplsk;\n\n        let plsCV = new NIPALS(oplsk[f].filteredX, { Y: Yk });\n\n        // scaling the test dataset with respect to the train\n        testXk.center('column', { center: dataCenter });\n        testXk.scale('column', { scale: dataSD });\n\n        let Eh = testXk;\n        // removing the orthogonal components from PLS\n        let scores;\n        for (let idx = 0; idx < nc + 1; idx++) {\n          scores = Eh.clone().mmul(oplsCV[idx][f].weightsXOrtho.transpose()); // ok\n          Eh.sub(scores.clone().mmul(oplsCV[idx][f].loadingsXOrtho));\n        }\n\n        // prediction\n        let tPred = Eh.clone().mmul(plsCV.w.transpose());\n        // this should be summed over ncomp (pls_prediction.R line 23)\n        let yHat = tPred.clone().mmul(plsCV.betas); // ok\n\n        // adding all prediction from all folds\n        for (let i = 0; i < fold.testIndex.length; i++) {\n          yHatk.setRow(fold.testIndex[i], [yHat.get(i, 0)]);\n          tPredk.setRow(fold.testIndex[i], [tPred.get(i, 0)]);\n          tOrthk.setRow(fold.testIndex[i], [scores.get(i, 0)]);\n        }\n        f++;\n      } // end of loop over folds\n\n      this.tCV.push(tPredk);\n      this.tOrthCV.push(tOrthk);\n      this.yHatCV.push(yHatk);\n\n      // calculate Q2y for all the prediction (all folds)\n      // ROC for DA is not implemented (check opls.R line 183) TODO\n      if (this.mode === 'regression') {\n        let tssy = tss(group.center('column').scale('column'));\n        let press = tss(group.clone().sub(yHatk));\n        let Q2y = 1 - press / tssy;\n        Q2.push(Q2y);\n      } else if (this.mode === 'discriminant_analysis') {\n        throw new Error('discriminant analysis is not yet supported');\n      }\n\n      // calculate the R2y for the complete data\n      if (nc === 0) {\n        modelNC = this._predictAll(features, group);\n      } else {\n        modelNC = this._predictAll(\n          modelNC.xRes,\n          group,\n          (options = { scale: false, center: false }),\n        );\n      }\n\n      // adding the predictive statistics from CV\n      modelNC.Q2y = Q2;\n      // store the model for each component\n      this.model.push(modelNC);\n      // console.warn(`OPLS iteration over # of Components: ${nc + 1}`);\n    } // end of loop over nc\n\n    // store scores from CV\n    let tCV = this.tCV;\n    let tOrthCV = this.tOrthCV;\n\n    let m = this.model[nc - 1];\n    let XOrth = m.XOrth;\n    let FeaturesCS = features.center('column').scale('column');\n    let labelsCS = group.center('column').scale('column');\n    let Xres = FeaturesCS.clone().sub(XOrth);\n    let plsCall = new NIPALS(Xres, { Y: labelsCS });\n    let E = Xres.clone().sub(plsCall.t.clone().mmul(plsCall.p));\n\n    let R2x = this.model.map((x) => x.R2x);\n    let R2y = this.model.map((x) => x.R2y);\n\n    this.output = {\n      Q2y: Q2,\n      R2x,\n      R2y,\n      tPred: m.plsC.t,\n      pPred: m.plsC.p,\n      wPred: m.plsC.w,\n      betasPred: m.plsC.betas,\n      Qpc: m.plsC.q,\n      tCV,\n      tOrthCV,\n      tOrth: m.tOrth,\n      pOrth: m.pOrth,\n      wOrth: m.wOrth,\n      XOrth,\n      yHat: m.totalPred,\n      Yres: m.plsC.yResidual,\n      E,\n    };\n  }\n\n  /**\n   * get access to all the computed elements\n   * Mainly for debug and testing\n   * @return {Object} output object\n   */\n  getLogs() {\n    return this.output;\n  }\n\n  getScores() {\n    let scoresX = this.tCV.map((x) => x.to1DArray());\n    let scoresY = this.tOrthCV.map((x) => x.to1DArray());\n    return { scoresX, scoresY };\n  }\n\n  /**\n   * Load an OPLS model from JSON\n   * @param {Object} model\n   * @return {OPLS}\n   */\n  static load(model) {\n    if (typeof model.name !== 'string') {\n      throw new TypeError('model must have a name property');\n    }\n    if (model.name !== 'OPLS') {\n      throw new RangeError(`invalid model: ${model.name}`);\n    }\n    return new OPLS(true, [], model);\n  }\n\n  /**\n   * Export the current model to a JSON object\n   * @return {Object} model\n   */\n  toJSON() {\n    return {\n      name: 'OPLS',\n      center: this.center,\n      scale: this.scale,\n      means: this.means,\n      stdevs: this.stdevs,\n      model: this.model,\n      tCV: this.tCV,\n      tOrthCV: this.tOrthCV,\n      yHatCV: this.yHatCV,\n    };\n  }\n\n  /**\n   * Predict scores for new data\n   * @param {Matrix} features - a matrix containing new data\n   * @param {Object} [options]\n   * @param {Array} [options.trueLabel] - an array with true values to compute confusion matrix\n   * @param {Number} [options.nc] - the number of components to be used\n   * @return {Object} - predictions\n   */\n  predict(newData, options = {}) {\n    let { trueLabels = [], nc = 1 } = options;\n    let labels = [];\n    if (trueLabels.length > 0) {\n      trueLabels = Matrix.from1DArray(trueLabels.length, 1, trueLabels);\n      labels = trueLabels.clone();\n    }\n\n    let features = newData.clone();\n\n    // scaling the test dataset with respect to the train\n    if (this.center) {\n      features.center('column', { center: this.means });\n      if (labels.rows > 0 && this.mode === 'regression') {\n        labels.center('column', { center: this.meansY });\n      }\n    }\n    if (this.scale) {\n      features.scale('column', { scale: this.stdevs });\n      if (labels.rows > 0 && this.mode === 'regression') {\n        labels.scale('column', { scale: this.stdevsY });\n      }\n    }\n\n    let Eh = features.clone();\n    // removing the orthogonal components from PLS\n    let tOrth;\n    let wOrth;\n    let pOrth;\n    let yHat;\n    let tPred;\n\n    for (let idx = 0; idx < nc; idx++) {\n      wOrth = this.model[idx].wOrth.transpose();\n      pOrth = this.model[idx].pOrth;\n      tOrth = Eh.clone().mmul(wOrth);\n      Eh.sub(tOrth.clone().mmul(pOrth));\n      // prediction\n      tPred = Eh.clone().mmul(this.model[idx].plsC.w.transpose());\n      // this should be summed over ncomp (pls_prediction.R line 23)\n      yHat = tPred.clone().mmul(this.model[idx].plsC.betas);\n    }\n\n    if (labels.rows > 0) {\n      if (this.mode === 'regression') {\n        let tssy = tss(labels);\n        let press = tss(labels.clone().sub(yHat));\n        let Q2y = 1 - press / tssy;\n\n        return { tPred, tOrth, yHat, Q2y };\n      } else if (this.mode === 'discriminant_analysis') {\n        let confusionMatrix = [];\n        confusionMatrix = ConfusionMatrix.fromLabels(\n          trueLabels.to1DArray(),\n          yHat.to1DArray(),\n        );\n\n        return { tPred, tOrth, yHat, confusionMatrix };\n      }\n    } else {\n      return { tPred, tOrth, yHat };\n    }\n  }\n\n  _predictAll(features, labels, options = {}) {\n    // cannot use the global this.center here\n    // since it is used in the NC loop and\n    // centering and scaling should only be\n    // performed once\n    const { center = true, scale = true } = options;\n\n    if (center) {\n      features.center('column');\n      labels.center('column');\n    }\n\n    if (scale) {\n      features.scale('column');\n      labels.scale('column');\n      // reevaluate tssy and tssx after scaling\n      // must be global because re-used for next nc iteration\n      // tssx is only evaluate the first time\n      this.tssy = tss(labels);\n      this.tssx = tss(features);\n    }\n\n    let oplsC = oplsNIPALS(features, labels);\n    let plsC = new NIPALS(oplsC.filteredX, { Y: labels });\n\n    let tPred = oplsC.filteredX.clone().mmul(plsC.w.transpose());\n    let yHat = tPred.clone().mmul(plsC.betas);\n\n    let rss = tss(labels.clone().sub(yHat));\n    let R2y = 1 - rss / this.tssy;\n\n    let xEx = plsC.t.clone().mmul(plsC.p.clone());\n    let rssx = tss(xEx);\n    let R2x = rssx / this.tssx;\n\n    return {\n      R2y,\n      R2x,\n      xRes: oplsC.filteredX,\n      tOrth: oplsC.scoresXOrtho,\n      pOrth: oplsC.loadingsXOrtho,\n      wOrth: oplsC.weightsXOrtho,\n      tPred: tPred,\n      totalPred: yHat,\n      XOrth: oplsC.scoresXOrtho.clone().mmul(oplsC.loadingsXOrtho),\n      oplsC,\n      plsC,\n    };\n  }\n  /**\n   *\n   * @param {*} X - dataset matrix object\n   * @param {*} group - labels matrix object\n   * @param {*} index - train and test index (output from getFold())\n   */\n  _getTrainTest(X, group, index) {\n    let testFeatures = new Matrix(index.testIndex.length, X.columns);\n    let testLabels = new Matrix(index.testIndex.length, 1);\n    index.testIndex.forEach((el, idx) => {\n      testFeatures.setRow(idx, X.getRow(el));\n      testLabels.setRow(idx, group.getRow(el));\n    });\n\n    let trainFeatures = new Matrix(index.trainIndex.length, X.columns);\n    let trainLabels = new Matrix(index.trainIndex.length, 1);\n    index.trainIndex.forEach((el, idx) => {\n      trainFeatures.setRow(idx, X.getRow(el));\n      trainLabels.setRow(idx, group.getRow(el));\n    });\n\n    return {\n      trainFeatures,\n      testFeatures,\n      trainLabels,\n      testLabels,\n    };\n  }\n}\n","import Matrix from 'ml-matrix';\n\n/**\n *\n * @param {*} classVector - an array with class information\n * @return {Object} - an object with class information in different formats\n */\n\nexport function summaryMetadata(classVector) {\n  let nObs = classVector.length;\n  let type = typeof classVector[0];\n  let counts = {};\n  switch (type) {\n    case 'string':\n      counts = {};\n      classVector.forEach((x) => (counts[x] = (counts[x] || 0) + 1));\n      break;\n    case 'number':\n      classVector = classVector.map((x) => x.toString());\n      counts = {};\n      classVector.forEach((x) => (counts[x] = (counts[x] || 0) + 1));\n      break;\n    default:\n  }\n  let groupIDs = Object.keys(counts);\n  let nClass = groupIDs.length;\n  let classFactor = classVector.map((x) => groupIDs.indexOf(x));\n  let classMatrix = Matrix.from1DArray(nObs, 1, classFactor);\n  return { groupIDs, nClass, classVector, classFactor, classMatrix };\n}\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","max","input","isArray","TypeError","length","maxValue","i","min","minValue","rescale","options","arguments","undefined","output","Array","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","factor","checkRowIndex","matrix","index","outer","rows","checkColumnIndex","columns","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","rowOut","some","r","from","columnOut","c","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","value","array","push","name","sumByRow","sum","j","get","sumByColumn","sumAll","v","productByRow","productByColumn","productAll","varianceByRow","unbiased","mean","cols","variance","sum1","sum2","x","varianceByColumn","varianceAll","size","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","Math","pow","sqrt","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","inspectMatrix","indent","repeat","indentData","constructor","inspectData","maxRows","maxColumns","maxNumSize","maxI","maxJ","result","line","formatNumber","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","indexOf","e","substring","installMathOperations","AbstractMatrix","Matrix","add","addS","addM","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","round","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","from1DArray","newRows","newColumns","newData","rowVector","columnVector","zeros","ones","fill","rand","random","randInt","Number","isInteger","interval","eye","diag","data","l","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","k","echelonForm","clone","h","iMax","swapRows","tmp","reducedEchelonForm","m","n","maxRow","p","pivot","Error","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","type","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","Float64Array","s","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","y","r1","c1","r2","c2","console","warn","embed","mat","resultat","blockMult","a","b","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","middle","first","last","flipColumns","kroneckerProduct","q","transpose","sortRows","compareFunction","compareNumbers","sort","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","standardDeviation","center","Symbol","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","WrapperMatrix2D","LuDecomposition","lu","pivotVector","pivotSign","t","LUcolj","kmax","LU","isSingular","col","solve","count","X","determinant","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","MIN_VALUE","isNaN","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","iter","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","condition","norm2","rank","tol","ii","leftSingularVectors","diagonalMatrix","useSVD","leftHandSide","rightHandSide","nipals","scaleScores","maxIterations","terminationCriteria","u","diff","w","tOld","counter","xResidual","residual","yResidual","betas","pow2array","initializeMatrices","elem","PLS","model","meanX","stdDevX","meanY","stdDevY","PBQ","R2X","scaleMethod","tolerance","latentVectors","train","trainingSet","trainingValues","rx","cx","ry","cy","ssqXcal","sumOfSquaresY","T","P","Q","B","W","Utils","transposeX","transposeY","tIndex","maxSumColIndex","uIndex","t1","den","pnorm","ssqYcal","E","F","predict","dataset","getExplainedVariance","load","KOPLS","YLoadingMat","SigmaPow","YScoreMat","predScoreMat","YOrthLoadingVec","YOrthEigen","YOrthScoreMat","toNorm","TURegressionCoeff","kernelX","kernel","orthogonalComp","predictiveComp","predictiveComponents","orthogonalComponents","compute","Identity","Sigma","YOrthScoreNorm","Infinity","TpiPrime","CoTemp","SoTemp","toiPrime","ITo","lastScoreMat","lastTpPrime","toPredict","KTestTrain","YOrthScoreVector","scoreMatPrime","p1","p2","p3","prediction","predYOrthVectors","ConfusionMatrix","labels","fromLabels","actual","predicted","distinctLabels","Set","actualIdx","predictedIdx","getMatrix","getLabels","getTotalCount","getTrueCount","getFalseCount","getTruePositiveCount","label","getIndex","getTrueNegativeCount","getFalsePositiveCount","getFalseNegativeCount","getPositiveCount","getNegativeCount","getTruePositiveRate","getTrueNegativeRate","getPositivePredictiveValue","TP","getNegativePredictiveValue","TN","getFalseNegativeRate","getFalsePositiveRate","getFalseDiscoveryRate","FP","getFalseOmissionRate","FN","getF1Score","getMatthewsCorrelationCoefficient","getInformedness","getMarkedness","getConfusionTable","getAccuracy","correct","incorrect","getCount","actualIndex","predictedIndex","accuracy","total","getFolds","features","N","allIdx","current","folds","randi","forEach","slice","foldsIndex","map","testIndex","trainIndex","concat","filter","el","idx2","oplsNIPALS","numberOSC","uNew","wOrtho","tOrtho","pOrtho","err","filteredX","weightsXOrtho","loadingsXOrtho","scoresXOrtho","weightsXPred","loadingsXpred","scoresXpred","loadingsY","tss","OPLS","opls","means","meansY","stdevs","stdevsY","tCV","tOrthCV","yHatCV","mode","nComp","cvFolds","group","Q2","oplsCV","modelNC","nc","yHatk","tPredk","tOrthk","oplsk","fold","trainTest","_getTrainTest","testXk","testFeatures","Xk","trainFeatures","Yk","trainLabels","dataCenter","dataSD","plsCV","NIPALS","Eh","scores","tPred","yHat","tssy","press","Q2y","_predictAll","xRes","XOrth","FeaturesCS","labelsCS","Xres","plsCall","R2x","R2y","plsC","pPred","wPred","betasPred","Qpc","tOrth","pOrth","wOrth","totalPred","Yres","getLogs","getScores","scoresX","scoresY","trueLabels","confusionMatrix","tssx","oplsC","rss","xEx","rssx","testLabels","summaryMetadata","classVector","nObs","counts","groupIDs","keys","nClass","classFactor","classMatrix"],"mappings":"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"}